// ========================================================================= //
// Copyright (c) 2023, Domenico Masini.                                      //
// (See "LICENSE.txt" for details.)                                          //
// ========================================================================= //

namespace FolAutomReas.Lib

module Search = 

    /// Returns the result of the first successful application of a function to the 
    /// elements of a list.
    /// 
    /// tryfind f [x1;...;xn] returns (f xi) for the first xi in the list for which 
    /// application of f succeeds.
    /// 
    /// Fails with tryfind if the application of the function fails for all 
    /// elements in the list. This will always be the case if the list is empty.
    val tryfind: f: ('a -> 'b) -> l: 'a list -> 'b
    
    /// Applies a function to every element of a list, returning a list of results 
    /// for those elements for which application succeeds.
    /// 
    /// mapfilter last [[1;2;3];[4;5];[];[6;7;8];[]] returns [3;5;8]
    /// 
    /// Fails if an exception not of the form Failure _ is generated by any 
    /// application to the elements.
    val mapfilter: f: ('a -> 'b) -> l: 'a list -> 'b list
    
    /// finds the element of a list l that maximizes or minimizes a function f 
    /// based on the given ord.
    /// 
    /// Support function for use with maximize and minimize.
    val optimize: ord: ('a -> 'a -> bool) -> f: ('b -> 'a) -> lst: 'b list -> 'b
    
    /// finds the element of a list l that maximizes a function f
    /// 
    /// maximize ((*) -1) [-1;2;3] returns -1
    val maximize: f: ('a -> 'b) -> l: 'a list -> 'a when 'b: comparison
    
    /// finds the element of a list l that minimizes a function f
    /// 
    /// minimize ((*) -1) [-1;2;3] returns 3
    val minimize: f: ('a -> 'b) -> l: 'a list -> 'a when 'b: comparison